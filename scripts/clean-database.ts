import { db } from '../src/config/database';
import { users, schools, registrationKeys } from '../src/models/schema';
import { eq } from 'drizzle-orm';

async function cleanDatabase() {
  console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π
    const adminUsers = await db
      .select()
      .from(users)
      .where(eq(users.role, 'admin'));

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${adminUsers.length} –∞–¥–º–∏–Ω–æ–≤ (–±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –Ω–µ–∞–¥–º–∏–Ω–æ–≤ (—à–∫–æ–ª—ã, —É—á–∏—Ç–µ–ª—è, —É—á–µ–Ω–∏–∫–∏)
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤)...');
    const deletedUsers = await db
      .delete(users)
      .where(eq(users.role, 'school'))
      .returning();

    const deletedTeachers = await db
      .delete(users)
      .where(eq(users.role, 'teacher'))
      .returning();

    const deletedStudents = await db
      .delete(users)
      .where(eq(users.role, 'student'))
      .returning();

    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ: ${deletedUsers.length} —à–∫–æ–ª, ${deletedTeachers.length} —É—á–∏—Ç–µ–ª–µ–π, ${deletedStudents.length} —É—á–µ–Ω–∏–∫–æ–≤`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —à–∫–æ–ª—ã
    console.log('üè´ –£–¥–∞–ª—è–µ–º —à–∫–æ–ª—ã...');
    const deletedSchools = await db.delete(schools).returning();
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —à–∫–æ–ª: ${deletedSchools.length}`);

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('üîë –£–¥–∞–ª—è–µ–º –∫–ª—é—á–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
    const deletedKeys = await db.delete(registrationKeys).returning();
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∫–ª—é—á–µ–π: ${deletedKeys.length}`);

    console.log('üéâ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∫–ª—é—á–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É');

    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
}

cleanDatabase();